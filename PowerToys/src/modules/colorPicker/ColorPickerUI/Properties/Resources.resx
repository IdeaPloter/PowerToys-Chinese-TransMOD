<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Blue_value" xml:space="preserve">
    <value>蓝色值</value>
    <comment>Tool tip that appears when hovering over a textbox that represents the blue HEX value</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
    <comment>Cancel button content</comment>
  </data>
  <data name="Copied_to_clipboard" xml:space="preserve">
    <value>复制成功</value>
    <comment>Message that appears when a user clicked a button that copies the value to the user's clipboard</comment>
  </data>
  <data name="Copy_to_clipboard" xml:space="preserve">
    <value>复制</value>
    <comment>Tooltip that describes a button that will copy a value to the user's clipboard</comment>
  </data>
  <data name="cp_editor" xml:space="preserve">
    <value>拾色盘</value>
    <comment>Do not translate product name</comment>
  </data>
  <data name="Green_value" xml:space="preserve">
    <value>绿色值</value>
    <comment>Tool tip that appears when hovering over a textbox that represents the green HEX value</comment>
  </data>
  <data name="Hex_value" xml:space="preserve">
    <value>十六进制值</value>
    <comment>Tool tip that appears when hovering over a textbox that represents the HEX value</comment>
  </data>
  <data name="Hue_slider" xml:space="preserve">
    <value>色相滑块</value>
    <comment>Tool tip that appears when hovering over a slider that represents the color hue (from HSV)</comment>
  </data>
  <data name="No_colors_yet" xml:space="preserve">
    <value>点击取色图标抓取颜色。</value>
    <comment>Message that shows when the user launches the window for the first time or when no colors have been selected</comment>
  </data>
  <data name="Select" xml:space="preserve">
    <value>确定</value>
    <comment>Select button content</comment>
  </data>
  <data name="Open_settings" xml:space="preserve">
    <value>打开设置</value>
    <comment>Tooltip that shows that the user can click this button to open PowerToys settings</comment>
  </data>
  <data name="Pick_color" xml:space="preserve">
    <value>抓取颜色</value>
    <comment>Tooltip that shows that the user can click this button to pick a new color</comment>
  </data>
  <data name="Red_value" xml:space="preserve">
    <value>红色值</value>
    <comment>Tool tip that appears when hovering over a textbox that represents the red HEX value</comment>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>删除</value>
    <comment>Tooltip that shows that the user can remove an item from a list</comment>
  </data>
  <data name="Export_by" xml:space="preserve">
    <value>导出</value>
    <comment>Tooltip that shows the user can export the selected items to a file</comment>
  </data>
  <data name="Export_by_color" xml:space="preserve">
    <value>按颜色分组</value>
    <comment>Tooltip that shows the user can export the selected items grouped by color to a file</comment>
  </data>
  <data name="Export_by_format" xml:space="preserve">
    <value>按格式分组</value>
    <comment>Tooltip that shows the user can export the selected items grouped by format to a file</comment>
  </data>
  <data name="Saturation_slider" xml:space="preserve">
    <value>饱和度滑块</value>
    <comment>Tool tip that appears when hovering over a slider that represents the color saturation (from HSV)</comment>
  </data>
  <data name="Selected_color" xml:space="preserve">
    <value>已选颜色</value>
    <comment>Tooltip that shows the user what the selected color is</comment>
  </data>
  <data name="Selected_color_helptext" xml:space="preserve">
    <value>可以对颜色进行调节</value>
    <comment>Narrator message that describes to the user that this color can be adjusted</comment>
  </data>
  <data name="Selected_color_tooltip" xml:space="preserve">
    <value>调色</value>
    <comment>Tooltip that shows that the user can adjust this color</comment>
  </data>
  <data name="Value_slider" xml:space="preserve">
    <value>色值滑块</value>
    <comment>Tool tip that appears when hovering over a slider that represents the color value (from HSV)</comment>
  </data>
  <data name="Select_color" xml:space="preserve">
    <value>选择该颜色</value>
  </data>
  <data name="Color_Code" xml:space="preserve">
    <value>颜色编码</value>
  </data>
  <data name="Color_History" xml:space="preserve">
    <value>取色记录</value>
  </data>
  <data name="Color_Palette" xml:space="preserve">
    <value>调色板</value>
  </data>
  <data name="Color_Picker_Control" xml:space="preserve">
    <value>取色器控制</value>
  </data>
  <data name="Darker_color" xml:space="preserve">
    <value>变暗 1</value>
  </data>
  <data name="Darkest_color" xml:space="preserve">
    <value>变暗 2</value>
  </data>
  <data name="Lighter_color" xml:space="preserve">
    <value>变亮 1</value>
  </data>
  <data name="Lightest color" xml:space="preserve">
    <value>变亮 2</value>
  </data>
</root>