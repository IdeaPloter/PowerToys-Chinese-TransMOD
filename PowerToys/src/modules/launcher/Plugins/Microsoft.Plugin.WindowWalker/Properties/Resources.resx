<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="wox_plugin_windowwalker_plugin_name" xml:space="preserve">
    <value>窗口操作</value>
  </data>
  <data name="wox_plugin_windowwalker_plugin_description" xml:space="preserve">
    <value>通过搜索窗口标题来操作窗口</value>
  </data>
  <data name="wox_plugin_windowwalker_Running" xml:space="preserve">
    <value>进程</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingConfirmKillProcess" xml:space="preserve">
    <value>结束进程时弹窗确认</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingExplorerSettingInfo" xml:space="preserve">
    <value>隐藏资源管理器进程</value>
    <comment>Explorer is here the program File Explorer</comment>
  </data>
  <data name="wox_plugin_windowwalker_SettingHideKillProcess" xml:space="preserve">
    <value>需要管理员权限才能结束进程时，隐藏“结束进程”按钮</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingResultsVisibleDesktop" xml:space="preserve">
    <value>仅显示在桌面可见的进程</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingSubtitleDesktopName" xml:space="preserve">
    <value>在结果中显示进程所在的虚拟桌面</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingSubtitlePid" xml:space="preserve">
    <value>在结果中显示进程 ID</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingOpenAfterKillAndClose" xml:space="preserve">
    <value>使用操作后不关闭启动器</value>
  </data>
  <data name="wox_plugin_windowwalker_Desktop" xml:space="preserve">
    <value>虚拟桌面</value>
  </data>
  <data name="wox_plugin_windowwalker_Number" xml:space="preserve">
    <value>No.</value>
    <comment>Short version of "Number"</comment>
  </data>
  <data name="wox_plugin_windowwalker_Process" xml:space="preserve">
    <value>进程名称</value>
  </data>
  <data name="wox_plugin_windowwalker_ProcessId" xml:space="preserve">
    <value>进程 ID </value>
  </data>
  <data name="wox_plugin_windowwalker_ExplorerInfoSubTitle" xml:space="preserve">
    <value>文件夹窗口需要是独立的进程，点击修改资源管理器设置</value>
    <comment>Explorer is here the program File Explorer</comment>
  </data>
  <data name="wox_plugin_windowwalker_ExplorerInfoTitle" xml:space="preserve">
    <value>提示：无法结束资源管理器进程</value>
    <comment>Explorer is here the program File Explorer</comment>
  </data>
  <data name="wox_plugin_windowwalker_Close" xml:space="preserve">
    <value>关闭窗口</value>
  </data>
  <data name="wox_plugin_windowwalker_Kill" xml:space="preserve">
    <value>结束进程</value>
  </data>
  <data name="wox_plugin_windowwalker_KillMessage" xml:space="preserve">
    <value>你即将结束以下进程:</value>
  </data>
  <data name="wox_plugin_windowwalker_KillMessageQuestion" xml:space="preserve">
    <value>确定执行?</value>
  </data>
  <data name="wox_plugin_windowwalker_KillMessageTitle" xml:space="preserve">
    <value>结束进程确认</value>
  </data>
  <data name="wox_plugin_windowwalker_KillMessageUwp" xml:space="preserve">
    <value>由于这是一个 UWP 进程，所有的实例都将被结束。确定执行?</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingKillProcessTree" xml:space="preserve">
    <value>结束进程，同时结束其子进程</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingExplorerSettingInfo_Description" xml:space="preserve">
    <value>其仅在使用唤醒词进行搜索时显示</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingKillProcessTree_Description" xml:space="preserve">
    <value>使用该功能须谨慎，结束整个进程树可能导致特定应用程序崩溃</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingOpenAfterKillAndClose_Description" xml:space="preserve">
    <value>如果启用了弹窗确认，则此功能无法生效</value>
  </data>
  <data name="wox_plugin_windowwalker_SettingSubtitleDesktopName_Description" xml:space="preserve">
    <value>若有多个虚拟桌面，程序在哪个虚拟桌面的信息</value>
  </data>
  <data name="wox_plugin_windowwalker_NotResponding" xml:space="preserve">
    <value>无响应</value>
  </data>
</root>