<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultSetsLabel.Text" xml:space="preserve">
    <value>默认变量</value>
  </data>
  <data name="DefaultVariablesLbl.Text" xml:space="preserve">
    <value>默认变量</value>
  </data>
  <data name="NewProfileBtn.Text" xml:space="preserve">
    <value>新建模板</value>
  </data>
  <data name="ProfilesDescriptionLbl.Text" xml:space="preserve">
    <value>通过模板来快速应用一组预配置的环境变量</value>
  </data>
  <data name="ProfilesLbl.Text" xml:space="preserve">
    <value>模板</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>系统</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>环境变量编辑器</value>
    <comment>Title of the window when running as user</comment>
  </data>
  <data name="EditDialog.CloseButtonText" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="EditVariableDialog_Title" xml:space="preserve">
    <value>编辑变量</value>
  </data>
  <data name="NewProfileNameTxtBox.Header" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="SaveBtn" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="ValueTxtBox.Header" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="AddBtn" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="AddNewProfileDialog_Title" xml:space="preserve">
    <value>新建模板</value>
  </data>
  <data name="NewProfileEnabled.Header" xml:space="preserve">
    <value>立即应用</value>
  </data>
  <data name="AddVariableBtn.Text" xml:space="preserve">
    <value>添加变量</value>
  </data>
  <data name="AddNewVariableName.Header" xml:space="preserve">
    <value>名称</value>
    <comment>Name as in Environment variable name</comment>
  </data>
  <data name="AddNewVariableValue.Header" xml:space="preserve">
    <value>值</value>
    <comment>Value as in Environment variable value</comment>
  </data>
  <data name="ExistingVariableSegmentedButton.Content" xml:space="preserve">
    <value>已有变量</value>
  </data>
  <data name="NewVariableSegmentedButton.Content" xml:space="preserve">
    <value>新建变量</value>
  </data>
  <data name="WindowAdminTitle" xml:space="preserve">
    <value>管理员权限：环境变量编辑器</value>
    <comment>Title of the window when running as administrator</comment>
  </data>
  <data name="CancelAddVariableBtn.Content" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ConfirmAddVariableBtn.Content" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AppliedVariablesDescriptionLbl.Text" xml:space="preserve">
    <value>当前已应用的环境变量</value>
  </data>
  <data name="AppliedVariablesLbl.Text" xml:space="preserve">
    <value>当前变量</value>
  </data>
  <data name="NewProfileVariablesListViewHeader.Text" xml:space="preserve">
    <value>变量</value>
  </data>
  <data name="DeleteMenuItem.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Delete_Dialog_Description" xml:space="preserve">
    <value>确定删除此模板？如果该模板已启用，将删除该模板已添加的变量。</value>
  </data>
  <data name="EditSystemDefaultSetInfoBar.Text" xml:space="preserve">
    <value>编辑系统环境变量需要管理员权限</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="StateNotUpToDateTitle" xml:space="preserve">
    <value>变量发生改动</value>
  </data>
  <data name="StateNotUpToDateOnStartupMsg" xml:space="preserve">
    <value>由模板添加的变量已被修改，在重新启用模板前，请检查改动情况</value>
  </data>
  <data name="CancelBtn" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="StateNotUpToDateEnvironmentMessageReceivedMsg" xml:space="preserve">
    <value>变量已被其他程序修改，刷新获取最新值</value>
  </data>
  <data name="AddVariable_Title" xml:space="preserve">
    <value>添加变量</value>
  </data>
  <data name="Delete_Variable_Description" xml:space="preserve">
    <value>确定删除这个变量吗？</value>
  </data>
  <data name="EditProfileDialog_Title" xml:space="preserve">
    <value>编辑模板</value>
  </data>
  <data name="AddVariableTooltip.Text" xml:space="preserve">
    <value>添加变量</value>
  </data>
  <data name="DefaultVariablesDescriptionLbl.Text" xml:space="preserve">
    <value>更改用户和系统的环境变量</value>
  </data>
  <data name="EditItem.Text" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="More_Options_ButtonTooltip.Text" xml:space="preserve">
    <value>更多选项</value>
  </data>
  <data name="MoveDown.Text" xml:space="preserve">
    <value>下移</value>
  </data>
  <data name="MoveUp.Text" xml:space="preserve">
    <value>上移</value>
  </data>
  <data name="InsertListEntryBefore.Text" xml:space="preserve">
    <value>在前面插入</value>
  </data>
  <data name="InsertListEntryAfter.Text" xml:space="preserve">
    <value>在后面插入</value>
  </data>
  <data name="NewProfileVariablesListViewApplyToSystemHeader.Text" xml:space="preserve">
    <value>应用到系统？</value>
  </data>
  <data name="RemoveListItem.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="RemoveItem.Text" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="AddVariableContent.Content" xml:space="preserve">
    <value>添加变量</value>
  </data>
  <data name="ProfileNotApplicableTitle" xml:space="preserve">
    <value>无法应用模板。</value>
  </data>
  <data name="StateProfileNotApplicableMsg" xml:space="preserve">
    <value>变量或备份变量无效。</value>
  </data>
  <data name="VariableIsAppliedByActiveProfileTooltip.Text" xml:space="preserve">
    <value>该变量由已启用的模板写入</value>
  </data>
</root>